package com.neusoft.dao.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.dbutils.DbUtils;
import org.apache.commons.dbutils.QueryRunner;
import org.apache.commons.dbutils.ResultSetHandler;
import org.apache.commons.dbutils.handlers.BeanHandler;

import com.neusoft.dao.DaoException;
import com.neusoft.dao.Shoppinginfo_consumerDao;
import com.neusoft.entity.Account;
import com.neusoft.entity.Address;
import com.neusoft.entity.Shoppinginfo_consumer;
import com.neusoft.utils.ConnectionFactory;

public class Shoppinginfo_consumerDaoImpl implements Shoppinginfo_consumerDao {
	  //添加
	QueryRunner qr = new QueryRunner();

	@Override
	public int insertShop(Shoppinginfo_consumer shop) throws DaoException {
		//获取连接
		  Connection conn=ConnectionFactory.getInstance().getConnection();
		//准备语句
		   String sql="insert into shoppinginfo_consumer(aid,nickname,money,lasttime )value(?,?,?,?)";
		   try {
			  return qr.update(conn,sql,shop.getAid(),shop.getNickname(),shop.getMoney(),shop.getLasttime());		
		  }catch(SQLException e) {
			  e.printStackTrace();
			    throw new  DaoException("添加出错",e);
		        }finally {
			    DbUtils.closeQuietly(conn);
		    }
	}
	//删除

	@Override
	public int deleteShop(Integer id) throws DaoException {
		//获取连接
		Connection conn=ConnectionFactory.getInstance().getConnection();
		       //准备语句
		 String sql="delete from shoppinginfo_consumer where aid=?";
		     try {
		  		return qr.update(conn,sql,id);		
		  		}catch(SQLException e) {
		  			e.printStackTrace();
		  			throw new  DaoException("删除出错",e);
		  		}finally {
		  			DbUtils.closeQuietly(conn);
		  	}
	}
	
    //修改
	@Override
	public int updateShop(Shoppinginfo_consumer sho) throws DaoException {
		//获取连接
		Connection conn=ConnectionFactory.getInstance().getConnection();
       //准备语句
		String sql="update shoppinginfo_consumer set nickname=? where aid=?";
	     try {
	    	 return qr.update(conn,sql,sho.getNickname(),sho.getAid());
	     }catch(SQLException e) {
	  			e.printStackTrace();
	  			throw new  DaoException("修改出错",e);
	  		}finally {
	  			DbUtils.closeQuietly(conn);
	  		}
	}

	
	@Override
	public List<Shoppinginfo_consumer> getShopList() throws DaoException {
		 //获取连接
		Connection conn=ConnectionFactory.getInstance().getConnection();
       //准备语句
		String sql="select id,aid,nickname,money,lasttime from shoppinginfo_consumer";
		
		List<Shoppinginfo_consumer> list=new  ArrayList<Shoppinginfo_consumer>();
		PreparedStatement pst=null;
		ResultSet rs=null;
	     try {
	    	 //step3:获取PreparedStatement,并且去发送sql
			   pst=conn.prepareStatement(sql);
			 //step5:发送sql
				rs=pst.executeQuery();
				//step6:处理返回结果
				while(rs.next()) {
					Shoppinginfo_consumer cc=new Shoppinginfo_consumer();
					Integer id = rs.getInt(1);
					cc.setId(id);
					Integer aid = rs.getInt(2);
					cc.setId(aid);
					String nickname = rs.getString(3);
					cc.setNickname(nickname);
					Integer money = rs.getInt(4);
					cc.setMoney(money);
					Long lasttime = rs.getLong(5);
					cc.setLasttime(lasttime);
					list.add(cc);
					}
	    	 System.out.println(list);
	  		}catch(SQLException e) {
	  			e.printStackTrace();
	  			throw new  DaoException("查询出错",e);
	  		}finally {
	  			DbUtils.closeQuietly(conn);
	  		}
	     return list;
	}

	//查询aid
	@Override
	public Shoppinginfo_consumer doLogin(int aid) throws DaoException {
		Shoppinginfo_consumer shopaid=null;
		//获取连接
		Connection conn=ConnectionFactory.getInstance().getConnection();
		
		//sql语句
		String sql="select id,aid,nickname,money,lasttime from shoppinginfo_consumer where aid=?";
		//
		ResultSetHandler<Shoppinginfo_consumer> rsh=new BeanHandler<Shoppinginfo_consumer>(Shoppinginfo_consumer.class);
		Object[] params= {aid};
		try {
			 shopaid=qr.query(conn, sql, rsh, params);
			System.out.println(shopaid);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			throw new DaoException("用户名或密码错误，登录失败");
		}finally {
			
			DbUtils.closeQuietly(conn);
		}
		
		
		
		return shopaid;
	}

	@Override
	public boolean update(Shoppinginfo_consumer time) throws DaoException {

		//获取连接
		Connection conn=ConnectionFactory.getInstance().getConnection();
		
		//sql语句
		String sql="update shoppinginfo_consumer set lasttime=? where id=?";
		
		try {
			int count=qr.update(conn, sql, time.getLasttime(),time.getId());
		     if(count>0) {
		    	 return true;
		     }
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			throw new DaoException("登录信息修改失败");
		}finally {
			DbUtils.closeQuietly(conn);
		}
		
		return false;
	}
	

	
}
